actor result{
	int result;
	result(int n);
	void value(int n);
};
result::result(int n) {
	this.result = n;
}
void result::value(int n) { 
	this.result = n; 
}

actor fibonacci{
	int n; 
	actor r;
	fibonacci(int n, actor r);
	void next();
};
fibonacci::fibonacci(int n, actor r) { this.n = n; this.r = r; }
void fibonacci::next() {
	if (n < 2) this.r.value(1);
	else {
		add a(r);
		fibonacci f1(n-1, a);
		f1.next();
		fibonacci f2(n-2, a);
		f2.next();
	}
}

actor add{
	int result;
	actor r;
	add(actor r);
	void value(int n);
};
add::add(actor r) { this.result = 0; this.r = r; }
void add::value(int n) {
	int answer = result;
	result += n;
	if (answer != 0) this.r.value(result);
}

int main(int argc, char** argv) {
	int n = atoi(argv[1]);
	result res(0);
	fibonacci fib(n, res);
}
